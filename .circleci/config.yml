version: 2.1

jobs:
  create_infrastructure:
    docker:
      - image: amazon/aws-cli:latest
    steps:
      - checkout
      - run:
          name: Ensure backend infrastructure exist
          command: |
            aws cloudformation deploy \
              --template-file ec2.yml \
              --stack-name ci-cd-test-1
  get_ip_adr:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: mkdir -p /tmp/workspace
      - run: yum install -y tar #need this for workspace
      - run: yum install -y gzip #need this for workspace
      - run:
          name: get ip
          command: |
            echo "[all]" > /tmp/workspace/inventory.txt
            aws ec2 describe-instances \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --filters "Name=tag:Name,Values=ci-cd-test-1-CICDInstance" \
              --output text >> /tmp/workspace/inventory.txt
            cat /tmp/workspace/inventory.txt
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - inventory.txt

  test_ip:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          command: |
            cat /tmp/workspace/inventory

  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["d9:82:7d:1a:04:a1:ab:48:35:9d:27:ef:3b:b1:88:ab"] # You can get this ID in the section where you registered the SSH Key
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible # install the dependencies needed for your playbook
      - run:
          name: Configure server
          command: |
            ansible-playbook -i inventory.txt playbook.yml
workflows:
  my_workflow:
    jobs:
      #- create_infrastructure
      - get_ip_adr
      - test_ip
          requires:
            - get_ip_adr
      #- configure_infrastructure